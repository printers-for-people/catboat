# This file contains a configuration for the Anycubic Kobra printer.
#
# See docs/Config_Reference.md for a description of parameters.
#
# To build the firmware, use the following configuration:
#   - Micro-controller: Huada Semiconductor HC32F460
#   - Communication interface: Serial (PA3 & PA2) - Anycube
#   - Clock Speed: 200 MHz or 168MHz
#
# Installation:
#  1. Rename the klipper bin to `firmware.bin` and copy it to an SD Card.
#  2. Power off the Printer, insert the SD Card and power it on.
#  3. The printer should beep several times and the LCD will be stuck on the
#     Splash screen.
#
# Notes:
#   - Your board may use a 200MHz clock or a 168MHz clock
#     Try configuring for 200Mhz, if that causes timer errors try 168MHz
#   - Make sure your SD card is formatted using an MBR partition table
#     and FAT32 filesystem

# Core

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 2000
max_z_velocity: 5
max_z_accel: 100

# Steppers

[stepper_x]
step_pin: PA5
dir_pin: PA4
enable_pin: !PC3
rotation_distance: 40
microsteps: 16
endstop_pin: tmctrigorilla_stepper_x:virtual_endstop
position_min: -42
position_endstop: -42
position_max: 224
homing_speed: 50
homing_retract_dist: 0

[tmctrigorilla stepper_x]
uart_pin: PA15
run_current: 0.8
sense_resistor: 0.100
stealthchop_threshold: 999999
uart_address: 0
driver_SGTHRS: 100
diag_pin: ^PA6

[stepper_y]
step_pin: PC4
dir_pin: PA7
enable_pin: !PC3
rotation_distance: 40
microsteps: 16
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: -3
position_endstop: -3
position_max: 222
homing_speed: 50
homing_retract_dist: 0

[tmc2209 stepper_y]
uart_pin: PA15
run_current: 0.8
sense_resistor: 0.100
stealthchop_threshold: 999999
uart_address: 1
driver_SGTHRS: 100
diag_pin: ^PC5

[stepper_z]
step_pin: PC7
dir_pin: !PC6
enable_pin: !PC3
rotation_distance: 4
microsteps: 16
endstop_pin: probe:z_virtual_endstop
position_min: -5
position_max: 250
homing_speed: 10

[tmc2209 stepper_z]
uart_pin: PA15
run_current: 0.8
sense_resistor: 0.100
stealthchop_threshold: 999999
uart_address: 2
driver_SGTHRS: 100
diag_pin: ^PA8

[extruder]
step_pin: PC14
dir_pin: PC15
enable_pin: !PC3
microsteps: 16
rotation_distance: 7.794750
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 105
pressure_advance: 0.045
heater_pin: PA1
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC1
control: pid
# Calibrated with hot end at 200c, bed at 60, parts fan on
pid_Kp: 17.111
pid_Ki: 0.659
pid_Kd: 111.06
min_temp: 5
max_temp: 260

[heater_bed]
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
control: pid
# Calibrated with hot end at 200c, bed at 60, parts fan on
pid_Kp: 61.847
pid_Ki: 0.902
pid_Kd: 1059.902
min_temp: 5
max_temp: 110

[bed_mesh]
speed: 100
mesh_min: 10, 10
mesh_max: 210, 210
probe_count: 6, 6

[probe]
pin: PB8
x_offset: 42
y_offset: 3
z_offset: 0.600
samples: 5
samples_tolerance_retries: 2

# Cooling

[fan]
pin: PB9

[heater_fan extruder_fan]
pin: PA13

[controller_fan controller_fan]
pin: PA14
fan_speed: 0.4

# Extra

[filament_switch_sensor my_sensor]
switch_pin: ^!PC13

[safe_z_home]
home_xy_position: 110, 110

[output_pin beeper]
pin: PB5
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.01
scale: 1

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=beeper VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=beeper VALUE=0
